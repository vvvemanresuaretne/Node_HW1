import readline from 'readline';
import { addOneContact } from './src/scripts/addOneContact.js';
import { generateContacts } from './src/scripts/generateContacts.js';
import { getAllContacts } from './src/scripts/getAllContacts.js';
import { countContacts } from './src/scripts/countContacts.js';
import { removeLastContact } from './src/scripts/removeLastContact.js';
import { removeAllContacts } from './src/scripts/removeAllContacts.js';

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

const menu = `
===== üìá –ú–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ =====
1. –î–æ–¥–∞—Ç–∏ –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç
2. –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
3. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
4. –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
5. –í–∏–¥–∞–ª–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç
6. –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
0. –í–∏–π—Ç–∏
==============================
–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –æ–ø—Ü—ñ—ó: `;

const main = () => {
  rl.question(menu, async (choice) => {
    switch (choice.trim()) {
      case '1':
        await addOneContact();
        break;
      case '2':
        rl.question('–°–∫—ñ–ª—å–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏? ', async (count) => {
          await generateContacts(Number(count));
          rl.close();
        });
        return;
      case '3':
        await getAllContacts();
        break;
      case '4':
        await countContacts();
        break;
      case '5':
        await removeLastContact();
        break;
      case '6':
        await removeAllContacts();
        break;
      case '0':
        console.log('üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!');
        rl.close();
        return;
      default:
        console.log('‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –æ–ø—Ü—ñ—è.');
    }

    main(); // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  });
};

main();
